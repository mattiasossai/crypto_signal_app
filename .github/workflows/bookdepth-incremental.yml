name: "5️⃣📥🛠️ bookDepth Inc. Download & Feat."

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Startdatum (YYYY-MM-DD)'
        required: true
      end_date:
        description: 'Enddatum (YYYY-MM-DD)'
        required: true
  schedule:
    - cron: '40 8 * * *'  # täglich 08:40 UTC

jobs:
  download-and-feature:
    name: "BookDepth ${{ matrix.symbol }} (incremental)"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pandas pyarrow scipy

      - name: Make extractor script executable
        run: chmod +x extract_bookDepth_features.py

      - name: Calc dates
        id: dates
        run: |
          echo "global_start=2025-01-01"       >> $GITHUB_OUTPUT
          echo "today=$(date -I -d 'yesterday')" >> $GITHUB_OUTPUT

      - name: Determine resume point
        id: resume
        run: |
          SYMBOL=${{ matrix.symbol }}
          DIR=features/bookDepth/${SYMBOL}
          mkdir -p "$DIR"
          LAST=$(ls $DIR/${SYMBOL}-features-*.parquet 2>/dev/null | sort | tail -n1 || true)
          if [[ -n "$LAST" ]]; then
            PREV_END=$(basename "$LAST" .parquet | sed -E 's/^.*_to_([0-9\-]+)$/\1/')
            START=$(date -I -d "$PREV_END + 1 day")
          else
            START=${{ steps.dates.outputs.global_start }}
          fi
          echo "start=$START" >> $GITHUB_OUTPUT
          echo "end=${{ steps.dates.outputs.today }}" >> $GITHUB_OUTPUT

      - name: Download & unzip bookDepth
        run: |
          SYMBOL=${{ matrix.symbol }}
          SD=${{ steps.resume.outputs.start }}
          ED=${{ steps.resume.outputs.end }}
          case "$SYMBOL" in
            BTCUSDT|ETHUSDT|BNBUSDT|SOLUSDT) INC="2023-01-01";;
            XRPUSDT)                           INC="2023-01-06";;
            ENAUSDT)                           INC="2024-04-02";;
            *)                                 INC=$SD;;
          esac
          [[ "$(date -d"$SD" +%s)" -lt "$(date -d"$INC" +%s)" ]] && SD="$INC"
          echo "→ Downloading bookDepth from $SD to $ED"
          TARGET="raw/bookDepth/$SYMBOL"
          mkdir -p "$TARGET"
          CUR="$SD"
          while [[ "$CUR" < "$ED" || "$CUR" == "$ED" ]]; do
            ZIP="${SYMBOL}-bookDepth-${CUR}.zip"
            echo "→ Fetching $ZIP"
            if curl -sSf "https://data.binance.vision/data/futures/um/daily/bookDepth/$SYMBOL/$ZIP" -o "$ZIP"; then
              unzip -q -o "$ZIP" -d "$TARGET"
              rm -f "$ZIP"
            else
              echo "⚠️ Missing $ZIP – skipping"
              rm -f "$ZIP"
            fi
            CUR=$(date -I -d "$CUR + 1 day")
          done

      - name: Feature extraction & append
        run: |
          SYMBOL=${{ matrix.symbol }}
          START=${{ steps.resume.outputs.start }}
          END=${{ steps.resume.outputs.end }}
          OUT=features/bookDepth/${SYMBOL}/${SYMBOL}-features-${START}_to_${END}.parquet
          mkdir -p "$(dirname "$OUT")"
          # Skript ist jetzt ausführbar und übernimmt Append-Logic intern
          ./extract_bookDepth_features.py \
            --input-dir raw/bookDepth/${SYMBOL} \
            --start-date "$START" \
            --end-date   "$END" \
            --output-file "$OUT"

      - name: Commit & Push merged Parquet
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git reset --mixed origin/main
          git add features/bookDepth/${{ matrix.symbol }}
          if git diff --cached --quiet; then
            echo "✔️ No new bookDepth features to push"
          else
            git commit -m "♻️ ${{ matrix.symbol }} bookDepth-Features ${{ steps.dates.outputs.start }} to ${{ steps.resume.outputs.end }}"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main
          fi

      - name: Cleanup raw data
        if: always()
        run: rm -rf raw/bookDepth/${{ matrix.symbol }}
