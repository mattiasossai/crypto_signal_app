name: ‚¨áÔ∏è Download & ‚öôÔ∏è Extract aggTrades Features

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Startdatum (YYYY-MM-DD)'
        required: true
        default: '2020-01-01'
      end_date:
        description: 'Enddatum (YYYY-MM-DD)'
        required: true
        default: '2020-02-01'
  schedule:
    - cron: '0 2 * * *'   # t√§glich 02:00 UTC

jobs:
  download-and-feature:
    runs-on: ubuntu-latest

    env:
      REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO: ${{ github.repository }}

    steps:
      - name: üîÑ Checkout repo
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: üì¶ Install dependencies
        run: |
          pip install --upgrade pip pandas pyarrow

      - name: üî¢ Set dates
        id: dates
        run: |
          echo "global_start=${{ github.event.inputs.start_date }}" >> $GITHUB_OUTPUT
          echo "global_end=${{ github.event.inputs.end_date }}"   >> $GITHUB_OUTPUT

      - name: üßπ Cleanup any leftovers
        run: rm -rf data/aggTrades && mkdir -p data/aggTrades

      - name: üîÅ Process all symbols sequentially
        run: |
          for SYMBOL in BTCUSDT ETHUSDT BNBUSDT XRPUSDT SOLUSDT ENAUSDT; do
            echo "‚ñ∂Ô∏è Starting $SYMBOL"

            SDG=${{ steps.dates.outputs.global_start }}
            ED=${{ steps.dates.outputs.global_end }}

            # === Download ===
            # 1) Inception-Tag f√ºr √úberlappung
            case "$SYMBOL" in
              BTCUSDT|ETHUSDT) INC=2019-12-31;;
              XRPUSDT)         INC=2020-01-06;;
              BNBUSDT)         INC=2020-02-10;;
              SOLUSDT)         INC=2020-09-14;;
              ENAUSDT)         INC=2024-04-02;;
              *)               INC=$SDG;;
            esac

            if [[ "$SYMBOL" != "BTCUSDT" && "$SYMBOL" != "ETHUSDT" ]]; then
              C=$INC
              while ! curl -sSf "https://data.binance.vision/data/futures/um/daily/aggTrades/$SYMBOL/${SYMBOL}-aggTrades-$C.zip" -o /dev/null; do
                C=$(date -I -d "$C +1 day")
              done
              INC=$C
            fi

            SD_RAW=$(date -I -d "$SDG -1 day")
            mkdir -p data/aggTrades/$SYMBOL

            CUR="$SD_RAW"
            while [[ "$CUR" < "$ED" || "$CUR" == "$ED" ]]; do
              ZIP="${SYMBOL}-aggTrades-${CUR}.zip"
              echo "‚Üí Fetching $ZIP"
              if curl -sSf "https://data.binance.vision/data/futures/um/daily/aggTrades/$SYMBOL/$ZIP" -o "$ZIP"; then
                unzip -q -o "$ZIP" -d data/aggTrades/$SYMBOL && rm -f "$ZIP"
              else
                echo "‚ö†Ô∏è Missing $ZIP ‚Äì skipping" && rm -f "$ZIP" || true
              fi
              CUR=$(date -I -d "$CUR +1 day")
            done

            # 2) Verzeichnis pr√ºfen
            if [ ! -d data/aggTrades/$SYMBOL ]; then
              echo "‚ùå data/aggTrades/$SYMBOL missing" && exit 1
            fi
            echo "‚úÖ data/aggTrades/$SYMBOL exists"

            # === Feature Extraction ===
            python3 extract_aggTrades_features.py \
              --input-dir   data/aggTrades/$SYMBOL \
              --output-file historical_tech/aggTrades/features/${SYMBOL}-features-${SDG}_to_${ED}.parquet \
              --start-date  $SDG \
              --end-date    $ED

            # === Commit & Push ===
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add historical_tech/aggTrades/features/${SYMBOL}-features-${SDG}_to_${ED}.parquet
            git commit -m "‚ôªÔ∏è ${SYMBOL} Features ${SDG} to ${ED}" || echo "No changes for $SYMBOL"
            git push https://x-access-token:${{ env.REPO_TOKEN }}@github.com/${{ env.REPO }} HEAD:main

            # === Cleanup vor n√§chstem Symbol ===
            rm -rf data/aggTrades/$SYMBOL
            echo "üóëÔ∏è Cleaned up data/aggTrades/$SYMBOL"
            echo "‚úÖ Finished $SYMBOL"
          done

      - name: üßπ Final Cleanup
        run: rm -rf data/aggTrades
