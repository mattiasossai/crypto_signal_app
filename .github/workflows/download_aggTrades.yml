name: Download & Extract aggTrades Features

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'   # täglich 02:00 UTC

jobs:
  download-and-feature:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, XRPUSDT, SOLUSDT, ENAUSDT]
    env:
      REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO: ${{ github.repository }}
    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pandas pyarrow

      - name: Compute global start/end
        id: set-dates
        run: |
          echo "global_start=2020-01-01" >> $GITHUB_OUTPUT
          echo "global_end=2020-02-01"   >> $GITHUB_OUTPUT

      - name: Download aggTrades ZIPs
        run: |
          SYMBOL=${{ matrix.symbol }}
          SDG=${{ steps.set-dates.outputs.global_start }}
          ED=${{ steps.set-dates.outputs.global_end }}

          # Inception-Tage (Overlap)
          case "$SYMBOL" in
            BTCUSDT|ETHUSDT) INC=2019-12-31;;
            XRPUSDT)         INC=2020-01-06;;
            BNBUSDT)         INC=2020-02-10;;
            SOLUSDT)         INC=2020-09-14;;
            ENAUSDT)         INC=2024-04-02;;
            *)               INC=$SDG;;
          esac

          # für alle außer BTC/ETH das erste existierende ZIP ermitteln
          if [[ "$SYMBOL" != "BTCUSDT" && "$SYMBOL" != "ETHUSDT" ]]; then
            C=$INC
            while ! curl -sSf "https://data.binance.vision/data/futures/um/daily/aggTrades/$SYMBOL/${SYMBOL}-aggTrades-$C.zip" -o /dev/null; do
              C=$(date -I -d "$C +1 day")
            done
            INC=$C
          fi

          # effektive Start + Overlap-Tag
          SD_RAW=$(date -I -d "$SDG -1 day")
          mkdir -p data/aggTrades/$SYMBOL

          CUR="$SD_RAW"
          while [[ "$CUR" < "$ED" || "$CUR" == "$ED" ]]; do
            ZIP="${SYMBOL}-aggTrades-${CUR}.zip"
            URL="https://data.binance.vision/data/futures/um/daily/aggTrades/$SYMBOL/$ZIP"
            echo "→ Fetching $ZIP"
            if curl -sSf "$URL" -o "$ZIP"; then
              unzip -q -o "$ZIP" -d data/aggTrades/$SYMBOL
              rm -f "$ZIP"
            else
              echo "⚠️ Missing $ZIP – skipping"
              rm -f "$ZIP" || true
            fi
            CUR=$(date -I -d "$CUR +1 day")
          done

      - name: Check downloaded folder
        run: |
          test -d data/aggTrades/${{ matrix.symbol }} && echo "✅ data/aggTrades/${{ matrix.symbol }} exists" || (echo "❌ Missing data folder" && exit 1)

      - name: Extract Features to Parquet
        run: |
          python3 extract_aggTrades_features.py \
            --input-dir   data/aggTrades/${{ matrix.symbol }} \
            --output-file historical_tech/aggTrades/features/${{ matrix.symbol }}-features-${{ steps.set-dates.outputs.global_start }}_to_${{ steps.set-dates.outputs.global_end }}.parquet \
            --start-date  ${{ steps.set-dates.outputs.global_start }} \
            --end-date    ${{ steps.set-dates.outputs.global_end }}

      - name: Commit & Push features
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git checkout main
          git add historical_tech/aggTrades/features/
          git commit -m "♻️ ${{ matrix.symbol }} Features ${{ steps.set-dates.outputs.global_start }} to ${{ steps.set-dates.outputs.global_end }}" || echo "No changes to commit"
          git push https://x-access-token:${{ env.REPO_TOKEN }}@github.com/${{ env.REPO }} HEAD:main

      - name: Cleanup download folder
        run: |
          rm -rf data/aggTrades/${{ matrix.symbol }}
