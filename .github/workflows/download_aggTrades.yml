name: üì• Download & Extract 6-Month aggTrades

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Startdatum (YYYY-MM-DD)'
        required: true
      end_date:
        description: 'Enddatum (YYYY-MM-DD)'
        required: true
  schedule:
    - cron: '0 2 1 */6 *'  # automatisch alle 6 Monate am 1.
jobs:
  download-and-features:
    runs-on: self-hosted
    env:
      REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO: ${{ github.repository }}
    strategy:
      matrix:
        # jeweils 6-Monats-Intervalle vom Dispatch-Input
        interval: [0]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate date window
        id: dates
        run: |
          START=${{ github.event.inputs.start_date || github.event.schedule }}  
          END=${{ github.event.inputs.end_date || (date -I -d "$START +6 months") }}
          echo "start=$START"  >> $GITHUB_OUTPUT
          echo "end=$END"      >> $GITHUB_OUTPUT

      - name: Download 6-Monats-Daten
        run: |
          mkdir -p data/agg
          cd data/agg
          SD=${{ steps.dates.outputs.start }}
          ED=${{ steps.dates.outputs.end }}
          SYMBOLS=(BTCUSDT ENAUSDT BNBUSDT ETHUSDT SOLUSDT XRPUSDT)
          for S in "${SYMBOLS[@]}"; do
            # von SD bis ED in t√§gliche ZIPs
            CUR=$SD
            while [[ "$CUR" < "$ED" ]]; do
              ZIP="${S}-aggTrades-${CUR}.zip"
              URL="https://data.binance.vision/data/futures/um/daily/aggTrades/${S}/${ZIP}"
              echo "Downloading $ZIP"
              wget -q "$URL" -O "$ZIP" || echo "WARN: $ZIP fehlt"
              CUR=$(date -I -d "$CUR +1 day")
            done
          done

      - name: Run feature extraction
        run: |
          cd extractors
          python3 extract_aggTrades_features.py \
            --input-path ../data/agg \
            --output-path ../data/features \
            --symbols BTCUSDT,ENAUSDT,BNBUSDT,ETHUSDT,SOLUSDT,XRPUSDT \
            --start ${{ steps.dates.outputs.start }} \
            --end ${{ steps.dates.outputs.end }}

      - name: Clean up raw data to free disk
        run: |
          rm -rf data/agg/*

      - name: Commit & Push Feature-Parquets
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/features
          git commit -m "‚ôªÔ∏è Features ${ { steps.dates.outputs.start }} bis ${{ steps.dates.outputs.end }}"
          git push https://x-access-token:${REPO_TOKEN}@github.com/${REPO}.git HEAD:main

