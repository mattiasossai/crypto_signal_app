name: '📥 Download & Extract aggTrades per Symbol'

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Startdatum (YYYY-MM-DD) für 6-Monats-Fenster'
        required: true
      end_date:
        description: 'Enddatum (YYYY-MM-DD) für 6-Monats-Fenster'
        required: true

jobs:
  download-and-feature:
    name: Download & Feature ${{ matrix.symbol }}
    runs-on: ubuntu-latest    # bei Bedarf hier auf self-hosted umstellen
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 1
    env:
      REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO:       ${{ github.repository }}

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: ⚙️ Setup Python & Tools
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl
          pip3 install --upgrade pip pandas numpy pyarrow

      - name: 📅 Calc dates
        id: dates
        run: |
          echo "global_start=${{ inputs.start_date }}" >> $GITHUB_OUTPUT
          echo "global_end=${{ inputs.end_date   }}" >> $GITHUB_OUTPUT

      - name: 📂 Download & unzip raw data with Overlap & Inception
        shell: bash
        run: |
          SYMBOL=${{ matrix.symbol }}
          SDG=${{ steps.dates.outputs.global_start }}
          ED=${{ steps.dates.outputs.global_end }}

          # 1) Inception per Symbol
          case "$SYMBOL" in
            BTCUSDT|ETHUSDT) INC=2019-12-31;;
            XRPUSDT)         INC=2020-01-06;;
            BNBUSDT)         INC=2020-02-10;;
            SOLUSDT)         INC=2020-09-14;;
            ENAUSDT)         INC=2024-04-02;;
            *)               INC=$SDG;;
          esac

          # 2) Für alle außer BTCUSDT INC so lange erhöhen, bis ZIP existiert
          if [ "$SYMBOL" != "BTCUSDT" ]; then
            CAND="$INC"
            while true; do
              ZIP="${SYMBOL}-aggTrades-${CAND}.zip"
              URL="https://data.binance.vision/data/futures/um/daily/aggTrades/${SYMBOL}/${ZIP}"
              if curl -sSf "$URL" -o /dev/null; then
                INC="$CAND" && break
              else
                CAND=$(date -I -d "$CAND +1 day")
              fi
            done
          fi

          # 3) SD = max(global_start, INC)
          t1=$(date -d"$SDG" +%s); t2=$(date -d"$INC" +%s)
          [ $t1 -lt $t2 ] && SD=$INC || SD=$SDG

          # 4) Overlap-Tag
          SD_RAW=$(date -I -d "$SD -1 day")
          DIR=data/aggTrades/$SYMBOL
          mkdir -p "$DIR"

          # 5) Download-Loop inkl. Overlap
          CUR="$SD_RAW"
          while [[ "$CUR" < "$ED" || "$CUR" == "$ED" ]]; do
            ZIP="${SYMBOL}-aggTrades-${CUR}.zip"
            URL="https://data.binance.vision/data/futures/um/daily/aggTrades/${SYMBOL}/${ZIP}"
            echo "→ Fetching $ZIP"
            if curl -sSf "$URL" -o "$ZIP"; then
              unzip -q -o "$ZIP" -d "$DIR" && rm -f "$ZIP"
            else
              echo "⚠️ Missing $ZIP – skipping"
              rm -f "$ZIP" || true
            fi
            CUR=$(date -I -d "$CUR +1 day")
          done

      - name: ✅ Verify CSV dir
        run: |
          if [ ! -d data/aggTrades/${{ matrix.symbol }} ]; then
            echo "❌ data/aggTrades/${{ matrix.symbol }} not found"
            exit 1
          fi

      - name: 📊 Feature extraction
        run: |
          mkdir -p historical_tech/aggTrades/features
          python3 extract_aggTrades_features.py \
            --input-dir   data/aggTrades/${{ matrix.symbol }} \
            --output-file historical_tech/aggTrades/features/${{ matrix.symbol }}-features-${{ steps.dates.outputs.global_start }}_to_${{ steps.dates.outputs.global_end }}.parquet \
            --start-date  ${{ steps.dates.outputs.global_start }} \
            --end-date    ${{ steps.dates.outputs.global_end }}

      - name: 🔄 Sync & Push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git checkout main
          git pull --rebase origin main
          git add historical_tech/aggTrades/features
          git commit -m "♻️ ${{ matrix.symbol }} Features ${{ steps.dates.outputs.global_start }} to ${{ steps.dates.outputs.global_end }}" || echo "No changes"
          git push https://x-access-token:${REPO_TOKEN}@github.com/${REPO}.git HEAD:main

      - name: 🧹 Cleanup raw data
        if: always()
        run: rm -rf data/aggTrades/${{ matrix.symbol }}
