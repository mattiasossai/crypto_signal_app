name: üì• Download & Extract aggTrades per Symbol

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Startdatum (YYYY-MM-DD)'
        required: true
      end_date:
        description: 'Enddatum (YYYY-MM-DD)'
        required: true

jobs:
  download-and-feature:
    runs-on: self-hosted
    strategy:
      matrix:
        symbol: [BTCUSDT, ENAUSDT, BNBUSDT, ETHUSDT, SOLUSDT, XRPUSDT]
      max-parallel: 1
    env:
      REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO:       ${{ github.repository }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          python3 -m pip install --upgrade pip
          pip3 install pandas numpy pyarrow

      - name: Calculate date window
        id: dates
        shell: bash
        run: |
          echo "start=${{ github.event.inputs.start_date }}" >> "$GITHUB_OUTPUT"
          echo "end=${{ github.event.inputs.end_date }}"   >> "$GITHUB_OUTPUT"

      - name: Download & unzip raw data
        shell: bash
        run: |
          SYMBOL=${{ matrix.symbol }}
          SD=${{ steps.dates.outputs.start }}
          ED=${{ steps.dates.outputs.end }}
          # Overlap: einen Tag vor Blockbeginn mitladen
          SD_RAW=$(date -I -d "$SD -1 day")

          RAW_DIR="data/aggTrades/$SYMBOL"
          mkdir -p "$RAW_DIR"
          CUR="$SD_RAW"
          # Lade von SD_RAW bis einschlie√ülich ED
          while [[ "$CUR" <= "$ED" ]]; do
            ZIP="${SYMBOL}-aggTrades-${CUR}.zip"
            URL="https://data.binance.vision/data/futures/um/daily/aggTrades/${SYMBOL}/${ZIP}"
            echo "Downloading $ZIP"
            wget -q "$URL" -O "$ZIP" || echo "WARN: $ZIP missing"
            unzip -q -o "$ZIP" -d "$RAW_DIR"
            rm "$ZIP"
            CUR=$(date -I -d "$CUR +1 day")
          done

      - name: Run feature extraction
        shell: bash
        run: |
          SYMBOL=${{ matrix.symbol }}
          SD=${{ steps.dates.outputs.start }}
          ED=${{ steps.dates.outputs.end }}
          mkdir -p "features"
          python3 extract_aggTrades_features.py \
            --input-dir   "data/aggTrades/$SYMBOL" \
            --output-file "historical_tech/aggtrades/features/${SYMBOL}-features-${SD}_to_${ED}.parquet" \
            --start-date  "$SD" \
            --end-date    "$ED"

      - name: Commit & Push Feature-Parquets
        shell: bash
        run: |
          SYMBOL=${{ matrix.symbol }}
          SD=${{ steps.dates.outputs.start }}
          ED=${{ steps.dates.outputs.end }}

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "historical_tech/aggtrades/features/${SYMBOL}-features-${SD}_to_${ED}.parquet"
          git commit -m "‚ôªÔ∏è ${SYMBOL} Features ${SD} to ${ED}" || echo "No changes"
          git push "https://x-access-token:${REPO_TOKEN}@github.com/${REPO}.git" HEAD:main

      - name: Clean up raw data to free disk
        shell: bash
        run: |
          rm -rf "data/aggTrades/${{ matrix.symbol }}"
