name: "4️⃣📥🛠️ aggTrades Inc. Download & Feat."

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Startdatum (YYYY-MM-DD)'
        required: true
      end_date:
        description: 'Enddatum (YYYY-MM-DD)'
        required: true
  schedule:
    - cron: '25 8 * * *'  # täglich 08:25 UTC

jobs:
  download-and-feature:
    name: "aggTrades ${{ matrix.symbol }} (incremental)"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: pip install --upgrade pandas pyarrow

      - name: Calc dates
        id: dates
        run: |
          echo "global_start=2025-01-01"       >> $GITHUB_OUTPUT
          echo "today=$(date -I -d 'yesterday')" >> $GITHUB_OUTPUT

      - name: Determine resume point
        id: resume
        run: |
          SYMBOL=${{ matrix.symbol }}
          DIR=features/aggTrades/${SYMBOL}
          LAST=$(ls $DIR/${SYMBOL}-features-*.parquet 2>/dev/null | sort | tail -n1 || true)
          if [[ -n "$LAST" ]]; then
            PREV_END=$(basename "$LAST" .parquet | sed -E 's/^.*_to_([0-9\-]+)$/\1/')
            START=$(date -I -d "$PREV_END + 1 day")
          else
            START=${{ steps.dates.outputs.global_start }}
          fi
          echo "start=$START" >> $GITHUB_OUTPUT
          echo "end=${{ steps.dates.outputs.today }}" >> $GITHUB_OUTPUT

      - name: Download & unpack raw CSVs
        run: |
          SYMBOL=${{ matrix.symbol }}
          SD=${{ steps.resume.outputs.start }}
          ED=${{ steps.resume.outputs.end }}

          # Inception
          case "$SYMBOL" in
            BTCUSDT|ETHUSDT) INC="2019-12-31";;
            XRPUSDT)         INC="2020-01-06";;
            BNBUSDT)         INC="2020-02-10";;
            SOLUSDT)         INC="2020-09-14";;
            ENAUSDT)         INC="2024-04-02";;
            *)               INC=$SD ;;
          esac
          [[ "$(date -d"$SD" +%s)" -lt "$(date -d"$INC" +%s)" ]] && SD="$INC"

          mkdir -p data/aggTrades/${SYMBOL}
          CUR=$(date -I -d "$SD - 1 day")
          while [[ "$CUR" <= "$ED" ]]; do
            ZIP="${SYMBOL}-aggTrades-${CUR}.zip"
            if curl -sSf "https://data.binance.vision/data/futures/um/daily/aggTrades/$SYMBOL/$ZIP" -o "$ZIP"; then
              unzip -p "$ZIP" > data/aggTrades/${SYMBOL}/${ZIP%.zip}.csv
              rm "$ZIP"
            fi
            CUR=$(date -I -d "$CUR + 1 day")
          done

      - name: Extract features to temp parquet
        run: |
          SYMBOL=${{ matrix.symbol }}
          TMP="tmp_${SYMBOL}.parquet"
          python3 extract_aggTrades_features.py \
            --input-dir  data/aggTrades/${SYMBOL} \
            --start-date "${{ steps.resume.outputs.start }}" \
            --end-date   "${{ steps.resume.outputs.end }}" \
            --output-file "$TMP"

      - name: Combine with existing parquet (append/overwrite)
        shell: bash
        run: |
          SYMBOL=${{ matrix.symbol }}
          GS=${{ steps.dates.outputs.global_start }}
          NE=${{ steps.resume.outputs.end }}
          DIR=features/aggTrades/${SYMBOL}
          mkdir -p "$DIR"
          OUT="$DIR/${SYMBOL}-features-${GS}_to_${NE}.parquet"

          # Wenn es schon ein altes File gibt, dann anhängen
          OLD=$(ls $DIR/${SYMBOL}-features-${GS}_to_*.parquet 2>/dev/null | sort | tail -n1 || true)
          if [[ -n "$OLD" ]]; then
            python3 - << 'EOF'
import pandas as pd, os, sys
old = pd.read_parquet("$OLD")
new = pd.read_parquet("tmp_${SYMBOL}.parquet")
df = pd.concat([old, new]).sort_index()
df.to_parquet("$OUT", compression="snappy")
EOF
            rm "$OLD"
          else
            mv "tmp_${SYMBOL}.parquet" "$OUT"
          fi

          git add "$OUT"

      - name: Commit & Push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git pull --rebase origin main
          git commit -m "♻️ ${SYMBOL} aggTrades features ${GS}→${NE}" || echo "No changes"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main

      - name: Cleanup raw CSVs
        if: ${{ always() }}
        run: rm -rf data/aggTrades/${{ matrix.symbol }}
