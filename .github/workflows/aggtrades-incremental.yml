name: "4Ô∏è‚É£üì•üõ†Ô∏è aggTrades Inc. Download & Feat."

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Startdatum (YYYY-MM-DD)'
        required: false
      end_date:
        description: 'Enddatum (YYYY-MM-DD)'
        required: false
  schedule:
    - cron: '0 0 * * *'  # t√§glich 08:55 UTC

jobs:
  download-and-feature:
    name: "aggTrades ${{ matrix.symbol }} (incremental)"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Make helper scripts executable
        run: |
          chmod +x scripts/check_tmp.py
          chmod +x scripts/append_aggtrades.py

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install --upgrade pandas pyarrow

      - name: Calc dates
        id: dates
        run: |
          echo "global_start=2025-01-01"       >> $GITHUB_OUTPUT
          echo "today=$(date -I -d 'yesterday')" >> $GITHUB_OUTPUT

      - name: Determine resume point
        id: resume
        run: |
          DIR=features/aggTrades/${{ matrix.symbol }}
          mkdir -p "$DIR"
          LAST=$(ls $DIR/${{ matrix.symbol }}-features-*.parquet 2>/dev/null | sort | tail -n1 || true)
          if [[ -n "$LAST" ]]; then
            PREV_END=$(basename "$LAST" .parquet | sed -E 's/^.*_to_([0-9-]+)$/\1/')
            START=$(date -I -d "$PREV_END + 1 day")
          else
            START=${{ steps.dates.outputs.global_start }}
          fi
          echo "start=$START" >> $GITHUB_OUTPUT
          echo "end=${{ steps.dates.outputs.today }}" >> $GITHUB_OUTPUT

      - name: Check date range
        id: dr
        run: |
          sd_ts=$(date -d "${{ steps.resume.outputs.start }}" +%s)
          ed_ts=$(date -d "${{ steps.resume.outputs.end }}" +%s)
          [[ "$sd_ts" -le "$ed_ts" ]] && echo "run=true" >> $GITHUB_OUTPUT || echo "run=false" >> $GITHUB_OUTPUT

      - name: Skip‚Äîno new date range
        if: steps.dr.outputs.run == 'false'
        run: |
          echo "‚úîÔ∏è Start > End, nothing to do for ${{ matrix.symbol }}."
          exit 0

      - name: Download & extract aggTrades (1-day overlap)
        if: steps.dr.outputs.run == 'true'
        run: |
          SYMBOL=${{ matrix.symbol }}
          SD=${{ steps.resume.outputs.start }}
          ED=${{ steps.resume.outputs.end }}
          case "$SYMBOL" in
            BTCUSDT|ETHUSDT) INC="2019-12-31";;
            XRPUSDT)         INC="2020-01-06";;
            BNBUSDT)         INC="2020-02-10";;
            SOLUSDT)         INC="2020-09-14";;
            ENAUSDT)         INC="2024-04-02";;
            *)               INC=$SD ;;
          esac
          [[ "$(date -d"$SD" +%s)" -lt "$(date -d"$INC" +%s)" ]] && SD="$INC"
          TARGET="data/aggTrades/$SYMBOL"
          mkdir -p "$TARGET"
          CUR=$(date -I -d "$SD -1 day")
          while [[ "$CUR" < "$ED" || "$CUR" == "$ED" ]]; do
            ZIP="${SYMBOL}-aggTrades-${CUR}.zip"
            echo "‚Üí Fetching $ZIP"
            if curl -sSf "https://data.binance.vision/data/futures/um/daily/aggTrades/$SYMBOL/$ZIP" -o "$ZIP"; then
              unzip -p "$ZIP" > "$TARGET/${ZIP%.zip}.csv"
              rm -f "$ZIP"
            else
              echo "‚ö†Ô∏è Missing $ZIP ‚Äì skipping"
              rm -f "$ZIP"
            fi
            CUR=$(date -I -d "$CUR + 1 day")
          done

      - name: Extract **only** the new day into tmp parquet
        if: steps.dr.outputs.run == 'true'
        run: |
          TMP="features/aggTrades/${{ matrix.symbol }}/tmp_${{ matrix.symbol }}.parquet"
          python3 extract_aggTrades_features.py \
            --input-dir  data/aggTrades/${{ matrix.symbol }} \
            --start-date "${{ steps.resume.outputs.start }}" \
            --end-date   "${{ steps.resume.outputs.end }}" \
            --output-file "$TMP"

      - name: Check for new features
        if: steps.dr.outputs.run == 'true'
        id: checknew
        run: |
          python3 scripts/check_tmp.py features/aggTrades/${{ matrix.symbol }}/tmp_${{ matrix.symbol }}.parquet
        continue-on-error: true

      - name: Append tmp to existing Parquet
        if: steps.checknew.conclusion == 'success'
        run: |
          SYMBOL=${{ matrix.symbol }}
          GS=${{ steps.dates.outputs.global_start }}
          NE=${{ steps.resume.outputs.end }}
          DIR=features/aggTrades/$SYMBOL
          OUT="${DIR}/${SYMBOL}-features-${GS}_to_${NE}.parquet"
          OLD=$(ls $DIR/${SYMBOL}-features-${GS}_to_*.parquet 2>/dev/null | sort | tail -n1 || true)
          python3 scripts/append_aggtrades.py \
            "$OLD" \
            "features/aggTrades/${SYMBOL}/tmp_${SYMBOL}.parquet" \
            "$OUT"
          rm "$OLD"
          rm "features/aggTrades/${SYMBOL}/tmp_${SYMBOL}.parquet"

      - name: Skip‚Äîno new features
        if: steps.checknew.conclusion == 'failure'
        run: |
          echo "‚úîÔ∏è No new aggTrades features for ${{ matrix.symbol }}, skipping."
          rm features/aggTrades/${{ matrix.symbol }}/tmp_${{ matrix.symbol }}.parquet

      - name: Cleanup raw CSVs
        if: always()
        run: rm -rf data/aggTrades/${{ matrix.symbol }}

      - name: Commit & Push merged Parquet
        if: steps.checknew.conclusion == 'success'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Stelle sicher, dass wir gegen den wirklich aktuellen main commit arbeiten
          git fetch origin main
          git reset --mixed origin/main
          git add features/aggTrades/${{ matrix.symbol }}
          if git diff --cached --quiet; then
            echo "‚úîÔ∏è No new features to push"
          else
            git commit -m "‚ôªÔ∏è ${{ matrix.symbol }} aggTrades-Features ${{ steps.dates.outputs.global_start }} to ${{ steps.resume.outputs.end }}"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main
          fi
