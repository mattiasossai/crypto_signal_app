# .github/workflows/download_futures_daily.yml

name: 📥 Download & Commit Daily Futures Data

on:
  workflow_dispatch:

jobs:
  download:
    name: ⬇️ Download ${{ matrix.category }} | ${{ matrix.symbol }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        category: [aggTrades, bookTicker, indexPriceKlines, metrics]
        symbol:   [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 8

    steps:
      - name: 🛎️ Checkout repo
        uses: actions/checkout@v3

      - name: 🔧 Install unzip & curl
        run: sudo apt-get update && sudo apt-get install -y unzip curl

      - name: 📥 Download & unpack ${{ matrix.category }} / ${{ matrix.symbol }}
        shell: bash
        run: |
          set -euo pipefail

          CATEGORY=${{ matrix.category }}
          SYMBOL=${{ matrix.symbol }}
          START="2020-01-01"
          END=$(date -I -d "yesterday")
          BASE="data/futures/um/daily/${CATEGORY}/${SYMBOL}"
          mkdir -p "$BASE"

          # 1) indexPriceKlines → einfacher Tages-Loop
          if [[ "$CATEGORY" == "indexPriceKlines" ]]; then
            cur="$START"
            while [[ "$cur" < "$END" || "$cur" == "$END" ]]; do
              DATE=$(date -d "$cur" +%Y-%m-%d)
              ZIP="${SYMBOL}-indexPriceKlines-1d-${DATE}.zip"
              URL="https://data.binance.vision/data/futures/um/daily/indexPriceKlines/${SYMBOL}/${ZIP}"
              echo "→ Fetching $ZIP"
              if curl -sSf "$URL" -o "$BASE/$ZIP"; then
                unzip -o "$BASE/$ZIP" -d "$BASE" && rm "$BASE/$ZIP"
                echo "   ✅ unpacked $ZIP"
              else
                echo "   ⚠️ missing $ZIP"
              fi
              cur=$(date -I -d "$cur +1 day")
            done
            exit 0
          fi

          # 2) metrics, aggTrades & bookTicker → Quarter-Verzeichnisse
          echo "→ Listing quarters for $CATEGORY/$SYMBOL"
          # HTML parse href="SYMBOL_YYMMDD/"
          quarters=(
            $(curl -s "https://data.binance.vision/data/futures/um/daily/${CATEGORY}/${SYMBOL}/" \
              | grep -oP '(?<=href=")'${SYMBOL}'_[0-9]{6}(?=/")')
          )
          for Q in "${quarters[@]}"; do
            QDIR="https://data.binance.vision/data/futures/um/daily/${CATEGORY}/${SYMBOL}/${Q}/"
            echo "  → Quarter $Q"
            # liste alle ZIP-Dateien im Quarter
            files=(
              $(curl -s "$QDIR" \
                | grep -oP "${SYMBOL}-${CATEGORY}-[0-9]{4}-[0-9]{2}-[0-9]{2}\.zip" \
                  || grep -oP "${SYMBOL}-[0-9]{4}-[0-9]{2}-[0-9]{2}\.zip")
            )
            for F in "${files[@]}"; do
              # DATE extrahieren (YYYY-MM-DD)
              if [[ "$CATEGORY" == "metrics" ]]; then
                # metrics zips heißen SYMBOL-YYYY-MM-DD.zip
                DATE=$(echo $F | grep -oP '[0-9]{4}-[0-9]{2}-[0-9]{2}')
                ZIP="$F"
                URL="${QDIR}${ZIP}"
              else
                # aggTrades/bookTicker: SYMBOL-CATEGORY-YYYY-MM-DD.zip
                DATE=$(echo $F | grep -oP '[0-9]{4}-[0-9]{2}-[0-9]{2}')
                ZIP="$F"
                URL="${QDIR}${ZIP}"
              fi

              # Filter auf unseren Zeitraum
              if [[ "$DATE" < "$START" || "$DATE" > "$END" ]]; then
                continue
              fi

              echo "    → Fetching $ZIP"
              if curl -sSf "$URL" -o "$BASE/$ZIP"; then
                unzip -o "$BASE/$ZIP" -d "$BASE" && rm "$BASE/$ZIP"
                echo "       ✅ unpacked $ZIP"
              else
                echo "       ⚠️ missing $ZIP"
              fi
            done
          done

      - name: 📦 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: data-${{ matrix.category }}-${{ matrix.symbol }}
          path: data/futures/um/daily/${{ matrix.category }}/${{ matrix.symbol }}/*

  aggregate_and_push:
    name: 🚀 Aggregate & Commit All Daily Data
    runs-on: ubuntu-latest
    needs: download

    steps:
      - name: 🛎️ Checkout fresh
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: data-artifacts

      - name: 🔀 Merge into repo
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data/futures/um/daily
          find data-artifacts -type f | while read src; do
            rel=${src#data-artifacts/}
            dst="data/${rel}"
            mkdir -p "$(dirname "$dst")"
            mv "$src" "$dst"
          done

      - name: 🚀 Commit & Push
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git reset --mixed origin/main
          git add data/futures/um/daily
          if git diff --cached --quiet; then
            echo "✅ No new daily data to commit"
          else
            git commit -m "chore(data): import daily futures data [skip ci]"
            git push origin HEAD:main
          fi
