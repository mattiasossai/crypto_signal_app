# .github/workflows/download_history_klines.yml
name: "1Ô∏è‚É£üïØÔ∏è Download & Commit Historical Klines"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'  # t√§glich 08:00 UTC

jobs:
  download_matrix:
    name: Download History ${{ matrix.symbol }} @ ${{ matrix.interval }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol:   [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
        interval: [1m, 5m, 15m, 1h, 4h]
      max-parallel: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Determine date range
        id: dates
        run: |
          YESTERDAY=$(date -d "yesterday" '+%Y-%m-%d')
          DIR="raw/klines/${{ matrix.symbol }}"
          if compgen -G "$DIR/${{ matrix.symbol }}-${{ matrix.interval }}-*.csv" > /dev/null; then
            LAST=$(find "$DIR" -type f \
              -name "${{ matrix.symbol }}-${{ matrix.interval }}-*.csv" \
              | sed -E "s/.*${{ matrix.symbol }}-${{ matrix.interval }}-([0-9]{4}-[0-9]{2}-[0-9]{2})\.csv/\1/" \
              | sort | tail -n1)
            START=$(date -d "$LAST +1 day" '+%Y-%m-%d')
          else
            START="$YESTERDAY"
          fi
          END="$YESTERDAY"
          echo "START=$START" >> $GITHUB_ENV
          echo "END=$END"     >> $GITHUB_ENV

      - name: Download yesterday‚Äôs CSV
        run: |
          SYMBOL="${{ matrix.symbol }}"
          INTERVAL="${{ matrix.interval }}"
          START="${{ env.START }}"
          END="${{ env.END }}"

          TARGET="raw/klines/$SYMBOL"
          mkdir -p "$TARGET"

          OUT="$TARGET/${SYMBOL}-${INTERVAL}-${END}.csv"
          if [[ -f "$OUT" ]]; then
            echo "‚úîÔ∏è  Exists $OUT ‚Äì skipping"
          else
            echo "‚Üí Fetching ${SYMBOL}-${INTERVAL}@${END}"
            URL="https://data.binance.vision/data/futures/um/daily/klines/${SYMBOL}/${INTERVAL}/${SYMBOL}-${INTERVAL}-${END}.zip"
            if curl -sSf "$URL" | funzip > "$OUT"; then
              echo " ‚úÖ Saved $OUT"
            else
              echo " ‚ö†Ô∏è Not found ‚Äì $URL"
              rm -f "$OUT"
            fi
          fi

      - name: Upload artifact for ${{ matrix.symbol }}-${{ matrix.interval }}
        uses: actions/upload-artifact@v4
        with:
          name: historical-${{ matrix.symbol }}-${{ matrix.interval }}
          path: raw/klines/${{ matrix.symbol }}/*-${{ env.END }}.csv
          if-no-files-found: ignore

  aggregate_and_push:
    name: Aggregate & Push All Historical
    needs: download_matrix
    runs-on: ubuntu-latest

    steps:
      - name: Checkout fresh
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      # (Optional) Entferne wirklich nur alte "historical-*" Reste
      - name: Cleanup legacy historical-* dirs
        run: rm -rf raw/klines/historical-*

      - name: Download all historical-artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./historical-artifacts

      - name: Merge new CSVs into raw/klines
        shell: bash
        run: |
          mkdir -p raw/klines
          # F√ºr jede CSV: Symbol = alles vor dem ersten '-'
          find historical-artifacts -type f -name '*.csv' | while read SRC; do
            FNAME=$(basename "$SRC")
            SYMBOL=${FNAME%%-*}
            DST="raw/klines/${SYMBOL}/${FNAME}"
            mkdir -p "$(dirname "$DST")"
            mv "$SRC" "$DST"
            echo " ‚ûï $DST"
          done

      - name: Commit & Push
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git reset --mixed origin/main
          git add raw/klines
          if git diff --cached --quiet; then
            echo "‚úîÔ∏è No new Klines to push"
          else
            git commit -m "chore(history): import ${END} [skip ci]"
            git push origin HEAD:main
          fi
