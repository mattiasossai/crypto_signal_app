name: 📥 Download Candlestick History into Repo

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  download:
    name: 🔄 ${{ matrix.symbol }}｜${{ matrix.interval }}｜${{ matrix.part }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        symbol:   [BTCUSDT, ETHUSDT, BNBUSDT, XRPUSDT, SOLUSDT, ENAUSDT]
        interval: [1m, 5m, 15m, 1h, 4h]
        part:     [part1, part2]

    steps:
      - name: 🔀 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ⚙️ Configure Git user
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 🔧 Make download script executable
        run: chmod +x train/download_data_range.sh

      - name: 📅 Calculate date range for ${{ matrix.part }}
        id: dates
        run: |
          if [[ "${{ matrix.part }}" == "part1" ]]; then
            START=2020-01-01
            END=2022-01-01
          else
            START=2022-01-01
            END=$(date -I -d "yesterday")
          fi
          echo "start=$START" >> $GITHUB_OUTPUT
          echo "end=$END"   >> $GITHUB_OUTPUT

      - name: 🌐 Download ${{ matrix.symbol }} / ${{ matrix.interval }} / ${{ matrix.part }}
        run: |
          OUT=historical/${{ matrix.symbol }}/${{ matrix.interval }}/${{ matrix.part }}
          mkdir -p "$OUT"
          ./train/download_data_range.sh \
            "${{ matrix.symbol }}" \
            "${{ matrix.interval }}" \
            "${{ steps.dates.outputs.start }}" \
            "${{ steps.dates.outputs.end }}" \
            "$OUT"

      - name: 📂 Unzip & cleanup
        run: |
          DIR=historical/${{ matrix.symbol }}/${{ matrix.interval }}/${{ matrix.part }}
          for z in "$DIR"/*.zip; do
            unzip -q "$z" -d "$DIR"
          done
          rm -f "$DIR"/*.zip

      - name: 🔄 Commit & Push CSVs into repo
        run: |
          git stash push --include-untracked -m "pre-pull stash"
          git fetch origin main
          git rebase origin/main
          git stash pop

          git add -A historical/${{ matrix.symbol }}/${{ matrix.interval }}/${{ matrix.part }}

          if ! git diff --cached --quiet; then
            git commit -m "feat(history): add ${{ matrix.symbol }} ${{ matrix.interval }} ${{ matrix.part }} CSVs up to $(date -I) [skip ci]"
            git push origin HEAD:main
          else
            echo "→ No new CSVs for ${{ matrix.symbol }} / ${{ matrix.interval }} / ${{ matrix.part }}"
          fi
