name: üì• Download History Data (ab 2020)

on:
  workflow_dispatch:

jobs:
  download-2020-2022:
    name: üîπ 2020‚Üí2022 History
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: ‚öôÔ∏è Skript ausf√ºhrbar machen
        run: chmod +x train/download_data_range.sh

      - name: üìÖ Datum setzen 2020‚Äì2022
        run: |
          echo "START=2020-01-01" >> $GITHUB_ENV
          echo "END=2022-01-01"   >> $GITHUB_ENV
          echo "PART=part1"       >> $GITHUB_ENV

      - name: üåê Download Vision-Daily-Zips 2020‚Äì2022
        run: |
          SYMBOLS=(BTCUSDT ETHUSDT BNBUSDT XRPUSDT SOLUSDT ENAUSDT)
          INTERVALS=(1m 5m 15m 1h 4h)
          for sym in "${SYMBOLS[@]}"; do
            for iv in "${INTERVALS[@]}"; do
              OUT=historical/${sym}/${iv}/${PART}
              mkdir -p "$OUT"
              ./train/download_data_range.sh "$sym" "$iv" "$START" "$END" "$OUT"
            done
          done

      - name: üì¶ Zip & keine leeren Ordner
        run: |
          mkdir -p artifacts
          shopt -s nullglob
          for sym in BTCUSDT ETHUSDT BNBUSDT XRPUSDT SOLUSDT ENAUSDT; do
            for iv in 1m 5m 15m 1h 4h; do
              DIR=historical/${sym}/${iv}/${PART}
              ZIP=artifacts/hist-${sym}-${iv}-${PART}.zip
              files=( "$DIR"/*.zip )
              if (( ${#files[@]} )); then
                zip -j "$ZIP" "${files[@]}"
                echo "‚Üí $ZIP (${#files[@]} files)"
              else
                echo "‚è© Kein Data f√ºr $sym $iv $PART"
              fi
            done
          done

      - name: üöÄ Upload Artifacts Part1
        uses: actions/upload-artifact@v4
        with:
          name: history-2020-2022
          path: artifacts/*.zip

  download-2022-now:
    name: üîπ 2022‚Üígestern History
    needs: download-2020-2022
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: ‚öôÔ∏è Skript ausf√ºhrbar machen
        run: chmod +x train/download_data_range.sh

      - name: üìÖ Datum setzen 2022‚Äìgestern
        run: |
          echo "START=2022-01-01" >> $GITHUB_ENV
          echo "END=$(date -I -d 'yesterday')" >> $GITHUB_ENV
          echo "PART=part2"                   >> $GITHUB_ENV

      - name: üåê Download Vision-Daily-Zips 2022‚Äìgestern
        run: |
          SYMBOLS=(BTCUSDT ETHUSDT BNBUSDT XRPUSDT SOLUSDT ENAUSDT)
          INTERVALS=(1m 5m 15m 1h 4h)
          for sym in "${SYMBOLS[@]}"; do
            for iv in "${INTERVALS[@]}"; do
              OUT=historical/${sym}/${iv}/${PART}
              mkdir -p "$OUT"
              ./train/download_data_range.sh "$sym" "$iv" "$START" "$END" "$OUT"
            done
          done

      - name: üì¶ Zip & keine leeren Ordner
        run: |
          mkdir -p artifacts
          shopt -s nullglob
          for sym in BTCUSDT ETHUSDT BNBUSDT XRPUSDT SOLUSDT ENAUSDT; do
            for iv in 1m 5m 15m 1h 4h; do
              DIR=historical/${sym}/${iv}/${PART}
              ZIP=artifacts/hist-${sym}-${iv}-${PART}.zip
              files=( "$DIR"/*.zip )
              if (( ${#files[@]} )); then
                zip -j "$ZIP" "${files[@]}"
                echo "‚Üí $ZIP (${#files[@]} files)"
              else
                echo "‚è© Kein Data f√ºr $sym $iv $PART"
              fi
            done
          done

      - name: üöÄ Upload Artifacts Part2
        uses: actions/upload-artifact@v4
        with:
          name: history-2022-gestern
          path: artifacts/*.zip
