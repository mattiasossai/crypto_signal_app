name: üîÑ Full Download & Commit Historical Data

# Manuelles Triggern ‚Äì sp√§ter auf schedule umstellen
on:
  workflow_dispatch:

jobs:
  download_matrix:
    name: Download History ${{ matrix.symbol }} @ ${{ matrix.interval }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
        interval: [1m, 5m, 15m, 1h, 4h]
      max-parallel: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install unzip (f√ºr funzip)
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Set Date Range
        id: dates
        run: |
          # Gestern
          YESTERDAY=$(date -d "yesterday" '+%Y-%m-%d')
          # Erster Tag des Monats von YESTERDAY
          START=$(date -d "$YESTERDAY" '+%Y-%m-01')
          END="$YESTERDAY"
          echo "START=$START" >> $GITHUB_ENV
          echo "END=$END" >> $GITHUB_ENV

      - name: Download History Range
        shell: bash
        run: |
          chmod +x historical/download_history_range.sh
          echo "‚Üí Downloading ${{ matrix.symbol }} @ ${{ matrix.interval }} from $START to $END"
          historical/download_history_range.sh \
            "${{ matrix.symbol }}" \
            "${{ matrix.interval }}" \
            "$START" \
            "$END"

      - name: Upload Historical Artifact
        uses: actions/upload-artifact@v4
        with:
          name: historical-${{ matrix.symbol }}-${{ matrix.interval }}
          path: |
            historical/${{ matrix.symbol }}/${{ matrix.interval }}/*.csv
          if-no-files-found: ignore

  aggregate_and_push:
    name: Aggregate & Push All Historical
    runs-on: ubuntu-latest
    needs: download_matrix
    env:
      GIT_USER: github-actions[bot]
      GIT_EMAIL: github-actions[bot]@users.noreply.github.com

    steps:
      - name: Checkout fresh
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Download all historical-artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./historical-artifacts

      - name: Merge new CSVs into repo
        shell: bash
        run: |
          for src in historical-artifacts/**/*.csv; do
            rel=${src#historical-artifacts/}
            dst="historical/${rel}"
            if [ ! -f "$dst" ]; then
              mkdir -p "$(dirname "$dst")"
              mv "$src" "$dst"
              echo " ‚ûï Added $dst"
            else
              echo " ‚è≠ Skipped existing $dst"
            fi
          done

      - name: Commit & Push
        shell: bash
        run: |
          git config user.name "${GIT_USER}"
          git config user.email "${GIT_EMAIL}"
          git fetch origin main
          git reset --mixed origin/main
          git add historical
          if ! git diff --cached --quiet; then
            git commit -m "chore(history): update ${START} ‚Üí ${END} [skip ci]"
            git push origin HEAD:main
          else
            echo " No changes to push"
          fi
