name: ðŸ“¥ Download Rolling History (last 30d)

on:
  workflow_dispatch:

jobs:
  download_history:
    name: History | ${{ matrix.symbol }} | ${{ matrix.interval }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        symbol:   [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
        interval: [1m,5m,15m,1h,4h]
      max-parallel: 24

    env:
      GIT_USER: github-actions[bot]
      GIT_EMAIL: github-actions[bot]@users.noreply.github.com

    steps:
      - name: Checkout mit Schreibrechten
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Tools installieren
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip jq

      - name: History herunterladen
        run: |
          chmod +x historical/download_history_range.sh
          historical/download_history_range.sh \
            "${{ matrix.symbol }}" \
            "${{ matrix.interval }}"

      - name: Ã„nderungen committen & pushen (autostash)
        shell: bash
        run: |
          git config user.name "${GIT_USER}"
          git config user.email "${GIT_EMAIL}"

          # Pull mit Autostash, um Remote-Updates zu integrieren ohne lokale neuen Files zu verlieren
          git pull --rebase --autostash origin main

          # Stage nur neu hinzugefÃ¼gte CSVs
          git add historical/${{ matrix.symbol }}/${{ matrix.interval }}/*.csv

          # Commit & Push, falls es neue Dateien gibt
          if ! git diff --cached --quiet; then
            git commit -m "chore(history): add rolling ${{ matrix.symbol }} ${{ matrix.interval }} [skip ci]"
            git push origin HEAD:main
          else
            echo "ðŸš€ Keine neuen Dateien fÃ¼r ${{ matrix.symbol }}/${{ matrix.interval }}"
          fi
