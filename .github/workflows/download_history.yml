name: "1Ô∏è‚É£üïØÔ∏è Download & Commit Historical Klines"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'  # t√§glich 08:00 UTC

jobs:
  download_matrix:
    name: Download History ${{ matrix.symbol }} @ ${{ matrix.interval }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol:   [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
        interval: [1m, 5m, 15m, 1h, 4h]
      max-parallel: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Determine Backfill Date Range
        id: dates
        shell: bash
        run: |
          YESTERDAY=$(date -d "yesterday" '+%Y-%m-%d')
          DIR="raw/klines/${{ matrix.symbol }}"
          if compgen -G "$DIR/${{ matrix.symbol }}-${{ matrix.interval }}-*.csv" > /dev/null; then
            LAST=$(find "$DIR" -type f \
              -name "${{ matrix.symbol }}-${{ matrix.interval }}-*.csv" \
              | sed -E "s/.*${{ matrix.symbol }}-${{ matrix.interval }}-([0-9]{4}-[0-9]{2}-[0-9]{2})\.csv/\1/" \
              | sort | tail -n1)
            START=$(date -d "$LAST +1 day" '+%Y-%m-%d')
          else
            START="$YESTERDAY"
          fi
          END="$YESTERDAY"
          echo "START=$START" >> $GITHUB_ENV
          echo "END=$END"     >> $GITHUB_ENV

      - name: Download History Range
        shell: bash
        run: |
          SYMBOL=${{ matrix.symbol }}
          INTERVAL=${{ matrix.interval }}
          START=${{ env.START }}
          END=${{ env.END }}

          TARGET="raw/klines/${SYMBOL}"
          mkdir -p "$TARGET"

          cur="$START"
          while [ "$(date -I -d "$cur")" != "$(date -I -d "$END + 1 day")" ]; do
            OUT="${TARGET}/${SYMBOL}-${INTERVAL}-${cur}.csv"
            if [ -f "$OUT" ]; then
              echo "‚úîÔ∏è Skipping existing $OUT"
            else
              echo "‚Üí Downloading ${SYMBOL}-${INTERVAL}@${cur}"
              URL="https://data.binance.vision/data/futures/um/daily/klines/${SYMBOL}/${INTERVAL}/${SYMBOL}-${INTERVAL}-${cur}.zip"
              if curl -sSf "$URL" | funzip > "$OUT"; then
                echo " ‚úÖ Saved $OUT"
              else
                echo " ‚ö†Ô∏è Missing or error: $URL"
                rm -f "$OUT"
              fi
            fi
            cur=$(date -I -d "$cur + 1 day")
          done

      - name: Commit & Push
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Ensure we're synced to latest main
          git fetch origin main
          git reset --mixed origin/main
          
          git add raw/klines/${{ matrix.symbol }}
          if git diff --cached --quiet; then
            echo "‚úîÔ∏è No new Klines to push for ${{ matrix.symbol }} @ ${{ matrix.interval }}"
          else
            git commit -m "chore(history): import ${{ matrix.symbol }}-${{ matrix.interval }}-${{ env.END }} [skip ci]"
            git pull --rebase origin main
            git push origin HEAD:main
          fi
