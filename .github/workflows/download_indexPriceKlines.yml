name: üì• Download & Commit indexPriceKlines (1h & 4h)

on:
  workflow_dispatch:
  schedule:
    # t√§glich 02:00 UTC
    - cron: '0 2 * * *'

jobs:
  download:
    name: ‚¨áÔ∏è Download indexPriceKlines | ${{ matrix.symbol }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 6

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install unzip & curl
        run: sudo apt-get update && sudo apt-get install -y unzip curl

      - name: Download & extract indexPriceKlines (Backfill)
        shell: bash
        run: |
          set -euo pipefail
          SYMBOL=${{ matrix.symbol }}
          YESTERDAY=$(date -I -d "yesterday")
          INTERVALS=( "1h" "4h" )

          for iv in "${INTERVALS[@]}"; do
            # determine start per interval
            TARGET_DIR="historical_tech/indexPriceKlines/${SYMBOL}/${iv}"
            if compgen -G "$TARGET_DIR/${SYMBOL}-${iv}-*.csv" > /dev/null; then
              LAST=$(find "$TARGET_DIR" -type f -name "${SYMBOL}-${iv}-*.csv" \
                | sed -E "s/.*${SYMBOL}-${iv}-([0-9]{4}-[0-9]{2}-[0-9]{2})\.csv/\1/" \
                | sort | tail -n1)
              START=$(date -d "$LAST +1 day" '+%Y-%m-%d')
            else
              START="$YESTERDAY"
            fi
            END="$YESTERDAY"

            BASE="data/futures/um/daily/indexPriceKlines/${SYMBOL}/${iv}"
            mkdir -p "$BASE"

            cur="$START"
            while [[ "$cur" < "$END" || "$cur" == "$END" ]]; do
              DATE="$cur"
              ZIP="${SYMBOL}-${iv}-${DATE}.zip"
              URL="https://data.binance.vision/data/futures/um/daily/indexPriceKlines/${SYMBOL}/${iv}/${ZIP}"
              echo "‚Üí Fetching $ZIP"
              if curl -sSf "$URL" -o tmp.zip; then
                unzip -p tmp.zip > "$BASE/${ZIP%.zip}.csv"
                rm tmp.zip
                echo " ‚úÖ extracted ${ZIP}"
              else
                echo " ‚ö†Ô∏è missing ${ZIP}"
                rm -f tmp.zip || true
              fi
              cur=$(date -I -d "$cur +1 day")
            done
          done

      - name: Upload indexPriceKlines artifacts
        uses: actions/upload-artifact@v4
        with:
          name: data-indexPriceKlines-${{ matrix.symbol }}
          path: |
            data/futures/um/daily/indexPriceKlines/${{ matrix.symbol }}/1h/*
            data/futures/um/daily/indexPriceKlines/${{ matrix.symbol }}/4h/*

  aggregate_and_push:
    name: Aggregate & Commit indexPriceKlines Data
    needs: download
    runs-on: ubuntu-latest

    steps:
      - name: Checkout fresh
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Download indexPriceKlines artifacts
        uses: actions/download-artifact@v4
        with:
          path: data-artifacts

      - name: Merge indexPriceKlines into historical_tech
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p historical_tech/indexPriceKlines
          find data-artifacts -type f | while read src; do
            rel=${src#data-artifacts/data/futures/um/daily/indexPriceKlines/}
            dst="historical_tech/indexPriceKlines/${rel}"
            mkdir -p "$(dirname "$dst")"
            mv "$src" "$dst"
          done

      - name: Commit & Push indexPriceKlines
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git reset --mixed origin/main
          git add historical_tech/indexPriceKlines
          if git diff --cached --quiet; then
            echo "‚úÖ No new indexPriceKlines to commit"
          else
            git commit -m "chore(data): backfill indexPriceKlines ${START}‚Üí${END} [skip ci]"
            git push origin HEAD:main
          fi
