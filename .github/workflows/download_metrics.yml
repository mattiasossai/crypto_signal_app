name: 📥 Download & Commit metrics

on:
  workflow_dispatch:

jobs:
  download:
    name: ⬇️ Download metrics | ${{ matrix.symbol }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 2

    steps:
      - name: 🛎️ Checkout repo
        uses: actions/checkout@v3

      - name: 🔧 Install unzip & curl
        run: sudo apt-get update && sudo apt-get install -y unzip curl

      - name: 📥 Download & extract metrics (ab 2021-12-01)
        shell: bash
        run: |
          set -euo pipefail
          SYMBOL=${{ matrix.symbol }}
          START="2021-12-01"
          END=$(date -I -d "yesterday")
          BASE="data/futures/um/daily/metrics/${SYMBOL}"
          mkdir -p "$BASE"

          cur="$START"
          while [[ "$cur" < "$END" || "$cur" == "$END" ]]; do
            DATE=$(date -d "$cur" +%Y-%m-%d)
            ZIP="${SYMBOL}-metrics-${DATE}.zip"
            URL="https://data.binance.vision/data/futures/um/daily/metrics/${SYMBOL}/${ZIP}"
            echo "→ Fetching metrics $DATE"
            if curl -sSf "$URL" -o tmp.zip; then
              unzip -p tmp.zip > "$BASE/${ZIP%.zip}.csv" && rm tmp.zip
              echo "   ✅ extracted ${ZIP}"
            else
              echo "   ⚠️ missing ${ZIP}"
              rm -f tmp.zip || true
            fi
            cur=$(date -I -d "$cur +1 day")
          done

          echo "📊 Disk usage after metrics download:"
          df -h .
          du -sh "$BASE" || true

      - name: 📦 Upload metrics artifact
        uses: actions/upload-artifact@v4
        with:
          name: data-metrics-${{ matrix.symbol }}
          path: data/futures/um/daily/metrics/${{ matrix.symbol }}/*

  aggregate_and_push:
    name: 🚀 Aggregate & Commit metrics Data
    needs: download
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout fresh
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: 📥 Download metrics artifacts
        uses: actions/download-artifact@v4
        with:
          path: data-artifacts

      - name: 🔀 Merge metrics into repo
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data/futures/um/daily/metrics
          find data-artifacts -type f | while read src; do
            # src = data-artifacts/data/futures/um/daily/metrics/...
            rel=${src#data-artifacts/data/}
            dst="data/${rel}"
            mkdir -p "$(dirname "$dst")"
            mv "$src" "$dst"
          done

      - name: 🚀 Commit & Push metrics
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git reset --mixed origin/main
          git add data/futures/um/daily/metrics
          if git diff --cached --quiet; then
            echo "✅ No new metrics to commit"
          else
            git commit -m "chore(data): import metrics [skip ci]"
            git push origin HEAD:main
          fi
