name: Download & Commit Metrics via Proxy

on:
  workflow_dispatch:

jobs:
  download_matrix:
    name: ðŸ”„ Download Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        metric: [open_interest, funding_rate, liquidity]
        part:   [part1, part2]
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 36

    env:
      PROXY_URL: https://cryptosignalapp-production.up.railway.app

    steps:
      - uses: actions/checkout@v3

      - name: jq installieren
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Download JSONs
        run: |
          chmod +x metrics/download_metrics_range.sh
          PROXY_URL="$PROXY_URL" \
            metrics/download_metrics_range.sh \
              ${{ matrix.metric }} \
              $( [ ${{ matrix.part }} == 'part1' ] && echo 2020-01-01 ) \
              $( [ ${{ matrix.part }} == 'part1' ] && echo 2022-12-31 ) \
              ${{ matrix.part }} \
              ${{ matrix.symbol }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: metrics-${{ matrix.metric }}-${{ matrix.part }}-${{ matrix.symbol }}
          path: metrics/${{ matrix.part }}/${{ matrix.metric }}/${{ matrix.symbol }}_*.json

  aggregate_and_push:
    name: ðŸ“¦ Aggregate & Push
    runs-on: ubuntu-latest
    needs: download_matrix
    if: needs.download_matrix.result == 'success'

    env:
      GIT_USER: github-actions[bot]
      GIT_EMAIL: github-actions[bot]@users.noreply.github.com

    steps:
      - name: Checkout fresh
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          # lÃ¤dt alle artifacts im workspace unter ./metrics-artifacts
          path: ./metrics-artifacts

      - name: Copy into metrics/â€¦  
        run: |
          # kopiert jede JSON aus den artifacts ins Ziel-Repo
          find metrics-artifacts -name '*.json' | while read src; do
            # erzeuge Zielordner
            dst="metrics/$(echo "$src" | cut -d/ -f2-)"
            mkdir -p "$(dirname "$dst")"
            mv "$src" "$dst"
          done

      - name: Commit & Push
        run: |
          git config user.name "${GIT_USER}"
          git config user.email "${GIT_EMAIL}"
          git add metrics
          if ! git diff --cached --quiet; then
            git commit -m "chore(metrics): full re-download [skip ci]"
            git push origin HEAD:main
          else
            echo "ðŸš€ Keine Ã„nderungen nach Full-Download"
          fi
