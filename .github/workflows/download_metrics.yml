name: Download & Commit 4yr Metrics via Proxy

on:
  workflow_dispatch:

jobs:
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  # 1. Download-Matrix (Fan-Out): lÃ¤dt alle JSONs parallel und speichert sie als Artifact
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  download_matrix:
    name: ðŸ”„ Download ${{ matrix.metric }} | ${{ matrix.part }} | ${{ matrix.symbol }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        metric: [open_interest, funding_rate, liquidity]
        part:   [part1, part2]
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 36

    env:
      PROXY_URL: ${{ secrets.RAILWAY_PROXY_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq unzip

      - name: Download Metrics via Proxy
        shell: bash
        run: |
          chmod +x metrics/download_metrics_range.sh

          if [[ "${{ matrix.part }}" == "part1" ]]; then
            START="2020-01-01"
            END="2022-12-31"
          else
            START="2023-01-01"
            END=$(date -I -d "yesterday")
          fi

          echo "â†’ Downloading ${{ matrix.metric }} | ${{ matrix.part }} | ${{ matrix.symbol }} from $START to $END"
          metrics/download_metrics_range.sh \
            "${{ matrix.metric }}" \
            "$START" \
            "$END" \
            "${{ matrix.part }}" \
            "${{ matrix.symbol }}"

      - name: Upload JSON-Artifact
        uses: actions/upload-artifact@v4
        with:
          name: metrics-${{ matrix.metric }}-${{ matrix.part }}-${{ matrix.symbol }}
          path: metrics/${{ matrix.part }}/${{ matrix.metric }}/${{ matrix.symbol }}/*.json
          if-no-files-found: ignore

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  # 2. Aggregator & Commit (Fan-In): zieht alle Artefakte, merged sie und pusht
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  aggregate_and_push:
    name: ðŸ“¦ Aggregate & Push Metrics
    runs-on: ubuntu-latest
    needs: download_matrix

    env:
      GIT_USER: github-actions[bot]
      GIT_EMAIL: github-actions[bot]@users.noreply.github.com

    steps:
      - name: Checkout fresh
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Download all metric-artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./metrics-artifacts

      - name: Clean old metrics folders
        run: |
          rm -rf metrics/part1 metrics/part2
          mkdir -p metrics/part1 metrics/part2

      - name: Copy artifacts into metrics/
        run: |
          find metrics-artifacts -type f -name '*.json' | while read src; do
            rel="${src#metrics-artifacts/}"
            dst="metrics/${rel}"
            mkdir -p "$(dirname "$dst")"
            mv "$src" "$dst"
          done

      - name: Commit & Push all Metrics
        shell: bash
        run: |
          git config user.name "${GIT_USER}"
          git config user.email "${GIT_EMAIL}"
          git fetch origin main
          git reset --mixed origin/main
          git add metrics
          if ! git diff --cached --quiet; then
            git commit -m "chore(metrics): full re-download [skip ci]"
            git push origin HEAD:main
          else
            echo "ðŸš€ No changes after metrics download"
          fi
