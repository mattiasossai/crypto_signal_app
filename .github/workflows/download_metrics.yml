name: üì• Download & Commit metrics

on:
  workflow_dispatch:
  schedule:
    # t√§glich 08:00 UTC
    - cron: '0 8 * * *'

jobs:
  download:
    name: ‚¨áÔ∏è Download metrics | ${{ matrix.symbol }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 6

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install unzip & curl
        run: sudo apt-get update && sudo apt-get install -y unzip curl

      - name: Determine yesterday
        id: dates
        run: echo "END=$(date -I -d 'yesterday')" >> $GITHUB_ENV

      - name: Download & extract yesterday‚Äôs metrics
        shell: bash
        run: |
          set -euo pipefail
          SYMBOL=${{ matrix.symbol }}
          DATE=$END
          BASE="data/futures/um/daily/metrics/${SYMBOL}"
          mkdir -p "$BASE"
          ZIP="${SYMBOL}-metrics-${DATE}.zip"
          URL="https://data.binance.vision/data/futures/um/daily/metrics/${SYMBOL}/${ZIP}"
          echo "‚Üí Fetching $ZIP"
          if curl -sSf "$URL" -o tmp.zip; then
            unzip -p tmp.zip > "$BASE/${ZIP%.zip}.csv"
            rm tmp.zip
            echo " ‚úÖ extracted ${ZIP}"
          else
            echo " ‚ö†Ô∏è missing ${ZIP}"
            rm -f tmp.zip || true
          fi

      - name: Upload yesterday‚Äôs metrics only
        uses: actions/upload-artifact@v4
        with:
          name: data-metrics-${{ matrix.symbol }}
          path: |
            data/futures/um/daily/metrics/${{ matrix.symbol }}/${{ matrix.symbol }}-metrics-${{ env.END }}.csv
          if-no-files-found: ignore

  aggregate_and_push:
    name: Aggregate & Commit metrics Data
    needs: download
    runs-on: ubuntu-latest

    steps:
      - name: Checkout fresh
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Download all metrics artifacts
        uses: actions/download-artifact@v4
        with:
          path: data-artifacts

      - name: Merge metrics into historical_tech
        shell: bash
        run: |
          set -euo pipefail
          ROOT="historical_tech/metrics/data-artifacts"
          mkdir -p "$ROOT"
          for art in data-artifacts/*; do
            name=$(basename "$art")                      # data-metrics-<SYMBOL>
            dst="$ROOT/$name"
            mkdir -p "$dst"
            mv "$art"/*.csv "$dst"/
            echo " ‚ûï Moved $name ‚Üí $dst"
          done

      - name: Commit & Push metrics
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git reset --mixed origin/main
          git add historical_tech/metrics/data-artifacts
          if git diff --cached --quiet; then
            echo "‚úÖ No new metrics to commit"
          else
            git commit -m "chore(data): import metrics ${END} [skip ci]"
            git push origin HEAD:main
          fi
