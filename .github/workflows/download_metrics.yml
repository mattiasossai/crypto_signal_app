name: üì• Download & Commit metrics

on:
  workflow_dispatch:
  schedule:
    # t√§glich 03:00 UTC
    - cron: '0 3 * * *'

jobs:
  download:
    name: ‚¨áÔ∏è Download metrics | ${{ matrix.symbol }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, XRPUSDT, ENAUSDT]
      max-parallel: 6

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install unzip & curl
        run: sudo apt-get update && sudo apt-get install -y unzip curl

      - name: Download & extract metrics (Backfill)
        shell: bash
        run: |
          set -euo pipefail
          SYMBOL=${{ matrix.symbol }}
          YESTERDAY=$(date -I -d "yesterday")
          TARGET_DIR="data/futures/um/daily/metrics/${SYMBOL}"
          mkdir -p "$TARGET_DIR"

          # Backfill nur gestern (oder seit letztem File)
          START="$YESTERDAY"
          END="$YESTERDAY"

          cur="$START"
          while [[ "$cur" < "$END" || "$cur" == "$END" ]]; do
            ZIP="${SYMBOL}-metrics-${cur}.zip"
            URL="https://data.binance.vision/data/futures/um/daily/metrics/${SYMBOL}/${ZIP}"
            echo "‚Üí Fetching $ZIP"
            if curl -sSf "$URL" -o tmp.zip; then
              unzip -p tmp.zip > "$TARGET_DIR/${ZIP%.zip}.csv"
              rm tmp.zip
              echo " ‚úÖ extracted ${ZIP}"
            else
              echo " ‚ö†Ô∏è missing ${ZIP}"
              rm -f tmp.zip || true
            fi
            cur=$(date -I -d "$cur +1 day")
          done

      - name: Upload metrics artifacts
        uses: actions/upload-artifact@v4
        with:
          name: data-metrics-${{ matrix.symbol }}
          path: data/futures/um/daily/metrics/${{ matrix.symbol }}/*.csv

  aggregate_and_push:
    name: Aggregate & Commit metrics Data
    needs: download
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download metrics artifacts
        uses: actions/download-artifact@v4
        with:
          path: data-artifacts

      - name: Merge metrics into historical_tech
        shell: bash
        run: |
          set -euo pipefail
          ROOT="historical_tech/metrics/data-artifacts"
          mkdir -p "$ROOT"
          # F√ºr jedes heruntergeladene Artifact-Verzeichnis (data-metrics-XYZ)
          for artdir in data-artifacts/*; do
            name=$(basename "$artdir")
            dst="$ROOT/$name"
            mkdir -p "$dst"
            # move alle CSVs hinein
            mv "$artdir"/*.csv "$dst"/
            echo " ‚ûï Moved ${name}/*.csv ‚Üí $dst"
          done

      - name: Commit & Push metrics
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git reset --mixed origin/main
          git add historical_tech/metrics/data-artifacts
          if git diff --cached --quiet; then
            echo "‚úÖ No new metrics to commit"
          else
            git commit -m "chore(data): backfill metrics [skip ci]"
            git push origin HEAD:main
          fi
