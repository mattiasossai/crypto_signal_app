name: 📊 Download Metrics (Parallel)

on:
  workflow_dispatch:

jobs:
  download_metrics:
    name: 📊 ${{ matrix.symbol }}｜${{ matrix.metric }}｜${{ matrix.part }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, XRPUSDT, SOLUSDT, ENAUSDT]
        metric: [open_interest, funding_rate, liquidity]
        part: [part1, part2]

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v3

      - name: 🔑 WORKER_URL setzen
        # Deploye vorher Deinen Cloudflare-Worker und
        # speichere die URL als GitHub-Secret METRICS_WORKER_URL
        run: echo "WORKER_URL=${{ secrets.METRICS_WORKER_URL }}" >> $GITHUB_ENV

      - name: ⚙️  Skript ausführbar machen
        run: chmod +x metrics/download_metrics_range.sh

      - name: 📅 Datumsspanne berechnen (${{ matrix.part }})
        id: dates
        run: |
          if [[ "${{ matrix.part }}" == "part1" ]]; then
            START=2020-01-01
            END=2022-01-01
          else
            START=2022-01-01
            END=$(date -I -d "yesterday")
          fi
          echo "start=$START" >> $GITHUB_OUTPUT
          echo "end=$END"   >> $GITHUB_OUTPUT

      - name: 🌐 Download ${{ matrix.symbol }} / ${{ matrix.metric }} / ${{ matrix.part }}
        run: |
          OUT=metrics/${{ matrix.symbol }}/${{ matrix.metric }}/${{ matrix.part }}
          mkdir -p "$OUT"
          ./metrics/download_metrics_range.sh \
            "${{ matrix.symbol }}" \
            "${{ matrix.metric }}" \
            "${{ steps.dates.outputs.start }}" \
            "${{ steps.dates.outputs.end }}" \
            "$OUT"

      - name: 📦 ZIP & Upload
        run: |
          mkdir -p artifacts
          DIR=metrics/${{ matrix.symbol }}/${{ matrix.metric }}/${{ matrix.part }}
          files=( "$DIR"/*.json )
          if (( ${#files[@]} )); then
            ZIP=artifacts/metrics-${{ matrix.symbol }}-${{ matrix.metric }}-${{ matrix.part }}.zip
            zip -j "$ZIP" "${files[@]}"
            echo "→ $ZIP erstellt mit ${#files[@]} Dateien"
          else
            echo "❌ Keine JSONs in $DIR – Job fehlschlagen"
            exit 1
          fi

      - name: 🚀 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: metrics-${{ matrix.symbol }}-${{ matrix.metric }}-${{ matrix.part }}
          path: artifacts/metrics-${{ matrix.symbol }}-${{ matrix.metric }}-${{ matrix.part }}.zip
