name: üìä Download 4yr Metrics

on:
  workflow_dispatch:

jobs:
  download:
    name: üîÑ ${{ matrix.metric }} ‚û°Ô∏è ${{ matrix.part }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        metric: [open_interest, funding_rate, liquidity]
        part:   [part1, part2]

    steps:
      # 1) Vollst√§ndiges Repo auschecken (fetch-depth:0 f√ºr pull/rebase)
      - name: üîÄ Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2) Worker-URL setzen
      - name: üåê Set WORKER_URL
        run: echo "WORKER_URL=${{ secrets.METRICS_WORKER_URL }}" >> $GITHUB_ENV

      # 3) Download-Script ausf√ºhrbar machen
      - name: üõ†Ô∏è Make script executable
        run: chmod +x metrics/download_metrics_range.sh

      # 4) Datumsspanne berechnen
      - name: üìÖ Compute date range
        run: |
          if [ "${{ matrix.part }}" = "part1" ]; then
            START="2020-01-01"
            END="2022-01-01"
          else
            START="2022-01-01"
            END="$(date -I -d "yesterday")"
          fi
          echo "START=$START" >> $GITHUB_ENV
          echo "END=$END"     >> $GITHUB_ENV

      # 5) JSONs herunterladen (l√∂scht vorher alles in metrics/‚Ä¶)
      - name: üåç Download metrics JSONs
        run: |
          ./metrics/download_metrics_range.sh \
            "${{ matrix.metric }}" \
            "$START" \
            "$END" \
            "${{ matrix.part }}"

      # 6) Commit & Push der neuen/gel√∂schten JSONs
      - name: üîÑ Commit & Push JSON into repo
        run: |
          # Git-User konfigurieren
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Aktuellen Stand der remote main holen
          git fetch origin main
          git rebase origin/main

          # Alle √Ñnderungen (L√∂schungen + neue JSONs) in das Metrics-Subfolder
          git add -A metrics/${{ matrix.part }}/${{ matrix.metric }}

          if ! git diff --cached --quiet; then
            git commit -m "feat(metrics): add ${{ matrix.metric }} part=${{ matrix.part }} up to $(date -I) [skip ci]"
            git push origin HEAD:main
          else
            echo "‚Üí No new metrics for ${{ matrix.metric }} / ${{ matrix.part }}"
          fi
