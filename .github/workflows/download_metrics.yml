name: üìä Download 4yr Metrics (3 Jobs, sequenziell)

on:
  workflow_dispatch:

jobs:
  download_metric:
    name: üîÑ Download ${{ matrix.metric }} (part1 & part2)
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        metric:
          - open_interest
          - funding_rate
          - liquidity
      # sorgt daf√ºr, dass immer nur 1 Job gleichzeitig l√§uft
      max-parallel: 1

    steps:
      - name: üîÄ Checkout repository (full history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üåê Set WORKER_URL
        run: echo "WORKER_URL=${{ secrets.METRICS_WORKER_URL }}" >> $GITHUB_ENV

      - name: üõ† Make script executable
        run: chmod +x metrics/download_metrics_range.sh

      - name: üì• Download part1 for ${{ matrix.metric }}
        run: |
          START=2020-01-01
          END=2022-01-01
          ./metrics/download_metrics_range.sh "${{ matrix.metric }}" "$START" "$END" part1

      - name: üì• Download part2 for ${{ matrix.metric }}
        run: |
          START=2022-01-01
          END=$(date -I -d "yesterday")
          ./metrics/download_metrics_range.sh "${{ matrix.metric }}" "$START" "$END" part2

      - name: üîç Sanity check sample JSON
        run: |
          SAMPLE="metrics/part1/${{ matrix.metric }}/BTCUSDT_2020-01-01.json"
          if jq -e '.error' "$SAMPLE" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è API returned error in $SAMPLE"
            exit 1
          else
            echo "‚úÖ Sample JSON OK."
          fi

      - name: üîÑ Commit & Push JSON into repo
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 1) stash lokale √Ñnderungen (chmod + usw.)
          git stash push --include-untracked -m "pre-rebase stash"

          # 2) fetch & rebase gegen remote/main
          git fetch origin main
          git rebase origin/main

          # 3) stash pop (bringt die neuen JSONs zur√ºck)
          git stash pop --index || true

          # 4) stage nur die Ordner f√ºr diese Metric
          git add -A metrics/part1/${{ matrix.metric }} metrics/part2/${{ matrix.metric }}

          # 5) commit & push falls neue Dateien
          if ! git diff --cached --quiet; then
            git commit -m "feat(metrics): add ${{ matrix.metric }} parts up to $(date -I) [skip ci]"
            git push origin HEAD:main
          else
            echo "‚Üí No new JSON for ${{ matrix.metric }}"
          fi
