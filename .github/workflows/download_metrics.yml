name: Download & Commit 4yr Metrics via Proxy

on:
  workflow_dispatch:

jobs:
  # 1) Fan-out: Einzelne Matrix-Jobs laden herunter und liefern Artefakte
  download-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        metric: [open_interest, funding_rate, liquidity]
        part:   [part1, part2]
        symbol: [BTCUSDT, ETHUSDT, BNBUSDT, XRPUSDT, SOLUSDT, ENAUSDT]
    env:
      PROXY_URL: https://cryptosignalapp-production.up.railway.app
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run download_metrics_range.sh
        shell: bash
        run: |
          chmod +x metrics/download_metrics_range.sh

          if [[ "${{ matrix.part }}" == "part1" ]]; then
            START="2020-01-01"
            END="2022-12-31"
          else
            START="2023-01-01"
            END=$(date -I -d "yesterday")
          fi

          echo "‚Üí Downloading ${{ matrix.metric }} | ${{ matrix.part }} | ${{ matrix.symbol }} @ $START ‚Üí $END"

          metrics/download_metrics_range.sh \
            "${{ matrix.metric }}" \
            "$START" \
            "$END" \
            "${{ matrix.part }}" \
            "${{ matrix.symbol }}"

      - name: Upload JSON-Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: metrics-${{ matrix.metric }}-${{ matrix.part }}-${{ matrix.symbol }}
          path: |
            metrics/${{ matrix.part }}/${{ matrix.metric }}/${{ matrix.symbol }}_*.json

  # 2) Fan-in: Alle Downloads zusammenf√ºhren, deduplizieren und einmalig pushen
  aggregate-and-push:
    needs: download-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download all Metrics-Artifacts
        uses: actions/download-artifact@v4
        with:
          path: new_metrics

      - name: Merge & Dedup JSONs
        shell: bash
        run: |
          set -euo pipefail
          # Gehe durch alle neuen JSONs:
          find new_metrics -type f -name '*.json' | while read src; do
            # Zielpfad extrahieren:
            rel=${src#new_metrics/metrics/}
            dest="metrics/$rel"
            if [[ ! -f "$dest" ]]; then
              echo "‚Üí Hinzuf√ºgen: $dest"
              mkdir -p "$(dirname "$dest")"
              mv "$src" "$dest"
            else
              echo "‚Ü©Ô∏è Existiert schon, skip: $dest"
            fi
          done

      - name: Commit & Push Metrics
        shell: bash
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          git add metrics
          if ! git diff --cached --quiet; then
            git commit -m "chore(metrics): full re-download [skip ci]"
            git push origin HEAD:main
          else
            echo "üöÄ Keine neuen Metrics zum Committen"
          fi
